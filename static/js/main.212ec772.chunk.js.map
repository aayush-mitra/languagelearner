{"version":3,"sources":["storage.js","utils/storage.js","components/Home.js","utils/authfuncs.js","components/Auth.js","components/Flashcards.js","components/Quiz.js","components/List.js","App.js","reportWebVitals.js","index.js"],"names":["MyProvider","props","state","token","userData","proxy","proxy2","MyContext","Provider","value","this","changeToken","setState","setUserData","data","children","Component","React","createContext","getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","log","setItem","stringify","Home","list","new","onChange","bind","onNew","create","logout","e","preventDefault","fetch","context","then","res","json","success","setParentToken","target","name","stuff","userid","_id","method","headers","body","user","email","lists","the_list","map","elem","i","className","to","href","onClick","type","login","cb","contextType","Auth","register","password","redirect","onSubmit","newUser","data2","info","label_classes","label1","label2","buttontxt","Flashcards","cardindex","cards","side1","change","next","back","flip","length","prevState","setTimeout","divclass","cardtransition","animation","style","view","display","side2","Quiz","ask","questions","questionIndex","isLoading","answer","onTypeChange","onAskChange","getRandomInt","choice","correct","innerHTML","parentElement","previousElementSibling","firstElementChild","substring","min","max","Math","ceil","floor","random","typed","id","question","answers","List","listid","match","params","create1","create2","save","changeView","editOnChange","onSave","toggleCreate","onCreate","createOnChange","onDelete","deleteList","final","cardid","parseInt","contextstuff","toLowerCase","prev","split","main","includes","forEach","newmenu","border","htmlFor","edits","backgroundColor","overflowY","Fragment","nextProps","App","error","t","basename","process","path","exact","strict","render","Consumer","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","thing","ReactDOM","document","getElementById"],"mappings":"wQA0BeA,EAxBf,kDACE,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,MAAO,6CACPC,OAAQ,8CANO,EADrB,qDAWY,IAAD,OACP,OACE,cAACC,EAAUC,SAAX,CAAoBC,MAAO,CACzBP,MAAOQ,KAAKR,MACZS,YAAa,SAACR,GAAD,OAAW,EAAKS,SAAS,CAAET,MAAOA,KAC/CU,YAAa,SAACC,GAAD,OAAU,EAAKF,SAAS,CAAER,SAAUU,MAHnD,SAKGJ,KAAKT,MAAMc,eAlBpB,GAAgCC,aAyBnBT,EAAYU,IAAMC,gBC3BxB,SAASC,EAAeC,GAC7B,IAAKA,EACH,OAAO,KAGT,IACE,IAAMC,EAAWC,aAAaC,QAAQH,GACtC,OAAIC,EACKG,KAAKC,MAAMJ,GAEb,KACP,MAAOK,GACP,OAAO,MAIJ,SAASC,EAAaP,EAAKQ,GAC3BR,GACHS,QAAQC,IAAI,yBAGd,IACER,aAAaS,QAAQX,EAAKI,KAAKQ,UAAUJ,IACzC,MAAOF,GACPG,QAAQC,IAAIJ,IClBT,IAAMO,EAAb,kDACE,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXgC,KAAM,GACNC,KAAK,GAGP,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,gBACb,EAAKE,OAAS,EAAKA,OAAOF,KAAZ,gBACd,EAAKG,OAAS,EAAKA,OAAOH,KAAZ,gBAVG,EADrB,mDAcSI,GAAI,IAAD,OACRA,EAAEC,iBACF,IAAMd,EAAMT,EAAe,mBAEvBS,GAAOA,EAAIzB,OACbwC,MAAMjC,KAAKkC,QAAQ1C,MAAMG,MAAQ,gBAC9BwC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACAA,EAAKC,UACP,EAAK/C,MAAMgD,eAAe,IAC1B,EAAKL,QAAQjC,YAAY,IACzB,EAAKiC,QAAQ/B,YAAY,UAzBrC,+BAmCW4B,GACP/B,KAAKE,SAAL,eAAgB6B,EAAES,OAAOC,KAAOV,EAAES,OAAOzC,UApC7C,4BAuCQgC,GACJA,EAAEC,iBACFhC,KAAKE,SAAS,CACZuB,KAAK,MA1CX,6BA8CSM,GAAI,IAAD,OACRA,EAAEC,iBACF,IAAMU,EAAQ,CACZD,KAAMzC,KAAKR,MAAMgC,KACjBmB,OAAQ3C,KAAKkC,QAAQ1C,MAAME,SAASkD,KAGtCX,MAAMjC,KAAKkC,QAAQ1C,MAAMG,MAAM,eAAgB,CAC7CkD,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,KAEjCC,KAAMjC,KAAKQ,UAAUoB,KACpBP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAS,IAAD,EAMRA,EAAKW,KAJPC,EAFU,EAEVA,MACAR,EAHU,EAGVA,KACAS,EAJU,EAIVA,MACAN,EALU,EAKVA,IAEF,EAAKV,QAAQ/B,YAAY,CACvB8C,QACAR,OACAS,QACAN,QAEF,EAAK1C,SAAS,CACZsB,KAAM,GACNC,KAAK,SA5Ef,+BAmFI,IAAM0B,EAAWnD,KAAKkC,QAAQ1C,MAAME,SAASwD,MAAME,KAAI,SAACC,EAAMC,GAC5D,OACA,cAAC,IAAD,CAAcC,UAAU,OAAOC,GAAI,SAASH,EAAKT,IAAjD,SACE,6BAAKS,EAAKZ,QADDa,MASb,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,OAAd,8BACA,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,IAA1B,oBAEF,6BACE,mBAAGC,KAAK,IAAIF,UAAU,OAAOG,QAAS1D,KAAK8B,OAA3C,gCAOV,qBAAKyB,UAAU,OAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,UAAf,UACE,0CACA,8BACE,+BACGJ,EACAnD,KAAKR,MAAMiC,IACV,6BACE,uBAAOkC,KAAK,OAAOjC,SAAU1B,KAAK0B,SAAU3B,MAAOC,KAAKR,MAAMgC,KAAM+B,UAAU,YAAYd,KAAK,WACzF,KAERzC,KAAKR,MAAMiC,IAIX,6BACE,wBAAQiC,QAAS1D,KAAK6B,OAAQ0B,UAAU,MAAxC,sBAJF,6BACE,wBAAQG,QAAS1D,KAAK4B,MAAO2B,UAAU,MAAvC,6BASV,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,UAAf,SACE,iFAGJ,sBAAKA,UAAU,YAAf,UACE,sCACA,8BACE,6BACE,+CAAiB,uBAAjB,0CAhJlB,GAA0BjD,aA4JXiB,IClJR,SAASqC,EAAMjE,EAAOqD,EAAMa,GACjC5B,MAAM,GAAD,OAAItC,EAAJ,eAAwB,CAC3BkD,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,KAEjCC,KAAMjC,KAAKQ,UAAU0B,KACpBb,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACAA,EAAKC,SACPuB,EAAGxB,MDwIXd,EAAKuC,YAAcjE,EE3JZ,IAAMkE,EAAb,kDACE,WAAYxE,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXwE,SAAU,EAAKzE,MAAMyE,SACrBvB,KAAM,GACNQ,MAAO,GACPgB,SAAU,GACVC,UAAU,GAGZ,EAAKxC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAXC,EADrB,qDAeWI,GACP/B,KAAKE,SAAL,eAAgB6B,EAAES,OAAOC,KAAOV,EAAES,OAAOzC,UAhB7C,+BAmBWgC,GAAI,ID3BUpC,EAAOqD,EAAMa,EC2BxB,SAKN7D,KAAKR,MAHPiD,EAFQ,EAERA,KACAQ,EAHQ,EAGRA,MACAgB,EAJQ,EAIRA,SAGF,GADAlC,EAAEC,iBACEhC,KAAKR,MAAMwE,SAAU,CACvB,IAAMI,EAAU,CACd3B,OACAQ,QACAgB,YDtCiBtE,ECyCVK,KAAKkC,QAAQ1C,MAAMG,MDzCFqD,ECyCSoB,EDzCHP,ECyCY,SAACzD,GAE3CwD,EAAM,EAAK1B,QAAQ1C,MAAMG,MAAOyE,GAAS,SAACC,GAAU,MAO9CjE,EAAK4C,KAJPC,EAHgD,EAGhDA,MACAR,EAJgD,EAIhDA,KACAS,EALgD,EAKhDA,MACAN,EANgD,EAMhDA,IAEF,EAAKV,QAAQ/B,YAAY,CACvB8C,QACAR,OACAS,QACAN,QAGF3B,EAAa,kBAAmB,CAACxB,MAAO4E,EAAM5E,QAC9C,EAAKS,SAAS,CACZuC,KAAM,GACNQ,MAAO,GACPgB,SAAU,GACVC,UAAU,IAEZ,EAAKhC,QAAQjC,YAAYoE,EAAM5E,OAC/B,EAAKF,MAAMU,YAAYoE,EAAM5E,WDjErCwC,MAAM,GAAD,OAAItC,EAAJ,kBAA2B,CAC9BkD,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,KAEjCC,KAAMjC,KAAKQ,UAAU0B,KACpBb,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACAA,EAAKC,SACPuB,EAAGxB,UC2DA,CACL,IAAMiC,EAAO,CACXrB,QACAgB,YAEFL,EAAM5D,KAAKkC,QAAQ1C,MAAMG,MAAO2E,GAAM,SAACD,GAAU,MAO3CA,EAAMrB,KAJRC,EAH6C,EAG7CA,MACAR,EAJ6C,EAI7CA,KACAS,EAL6C,EAK7CA,MACAN,EAN6C,EAM7CA,IAEF,EAAKV,QAAQ/B,YAAY,CACvB8C,QACAR,OACAS,QACAN,QAGF3B,EAAa,kBAAmB,CAACxB,MAAO4E,EAAM5E,QAC9C,EAAKS,SAAS,CACZuC,KAAM,GACNQ,MAAO,GACPgB,SAAU,GACVC,UAAU,IAEZ,EAAKhC,QAAQjC,YAAYoE,EAAM5E,OAC/B,EAAKF,MAAMU,YAAYoE,EAAM5E,aA1FrC,+BAmGY,IAAD,OACH8E,EAAgB,CAClBC,OAAQxE,KAAKR,MAAMwE,SAAW,SAAW,uBACzCS,OAASzE,KAAKR,MAAMwE,SAAsB,uBAAX,SAC/BU,UAAW1E,KAAKR,MAAMwE,SAAW,WAAa,SAGhD,OAAIhE,KAAKR,MAAM0E,SACL,cAAC,IAAD,CAAUV,GAAG,MAKrB,sBAAKD,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,OAAd,8BACA,8BACE,6BACE,6BACE,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,IAA1B,6BAQV,qBAAKD,UAAU,OAAf,SACE,qBAAKA,UAAU,qBAAf,SAEE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAWgB,EAAcC,OAAQd,QAAS,kBAAM,EAAKxD,SAAS,CAAC8D,UAAU,KAA9E,mBACA,qBAAKT,UAAWgB,EAAcE,OAAQf,QAAS,kBAAM,EAAKxD,SAAS,CAAC8D,UAAU,KAA9E,sBACA,sBAAKT,UAAU,yBAAf,UAEIvD,KAAKR,MAAMwE,SAAW,gCACpB,2CAAqB,uBACrB,uBAAOL,KAAK,OAAOjC,SAAU1B,KAAK0B,SAAU3B,MAAOC,KAAKR,MAAMiD,KAAMc,UAAU,YAAYd,KAAK,YACxF,KAGX,gCACE,4CAAsB,uBACtB,uBAAOkB,KAAK,QAAQjC,SAAU1B,KAAK0B,SAAU3B,MAAOC,KAAKR,MAAMyD,MAAOM,UAAU,YAAYd,KAAK,aAEnG,gCACE,+CAAyB,uBACzB,uBAAOkB,KAAK,WAAWjC,SAAU1B,KAAK0B,SAAU3B,MAAOC,KAAKR,MAAMyE,SAAUV,UAAU,YAAYd,KAAK,gBAEzG,8BACE,wBAAQiB,QAAS1D,KAAKmE,SAAtB,SAAiCI,EAAcG,+BAtJjE,GAA0BpE,aAkKXyD,IACfA,EAAKD,YAAcjE,E,UCtKN8E,EAAb,kDACE,WAAYpF,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXoF,UAAW,EACXC,MAAO,EAAKtF,MAAMsF,MAClBC,OAAO,EACPC,QAAQ,GAGV,EAAKC,KAAO,EAAKA,KAAKrD,KAAV,gBACZ,EAAKsD,KAAO,EAAKA,KAAKtD,KAAV,gBACZ,EAAKuD,KAAO,EAAKA,KAAKvD,KAAV,gBAXK,EADrB,mDAgBQ3B,KAAKR,MAAMqF,MAAMM,OAAS,IAAMnF,KAAKR,MAAMoF,WAC7C5E,KAAKE,UAAS,SAAAkF,GACZ,MAAO,CAACR,UAAWQ,EAAUR,UAAY,EAAGE,OAAO,EAAMC,QAAQ,QAlBzE,6BAwBQ,IAAM/E,KAAKR,MAAMoF,WACnB5E,KAAKE,UAAS,SAAAkF,GACZ,MAAO,CAACR,UAAWQ,EAAUR,UAAY,EAAGE,OAAO,EAAMC,QAAQ,QA1BzE,6BAgCI/E,KAAKE,SAAS,CACZ4E,OAAQ9E,KAAKR,MAAMsF,UAjCzB,2CAqCwB,IAAD,QACO,IAAtB9E,KAAKR,MAAMuF,QACbM,YAAW,WACT,EAAKnF,SAAS,CACZ6E,QAAQ,MAET,OA3CT,+BA+CY,IAAD,EAIH/E,KAAKR,MAFPoF,EAFK,EAELA,UACAC,EAHK,EAGLA,MAGES,EAAWtF,KAAKR,MAAMsF,MAAQ,GAAK,cAEnCS,EAAiBvF,KAAKR,MAAMuF,OAAS,CAACS,UAAW,4BAA8B,GAEnF,OACE,sBAAKC,MAA2B,eAApBzF,KAAKT,MAAMmG,KAAwB,CAAEC,QAAS,QAAW,GAAIpC,UAAU,aAAnF,UACE,sBAAKkC,MAAOF,EAAgB7B,QAAS1D,KAAKkF,KAAM3B,UAAW,OAAS+B,EAApE,UACE,qBAAK/B,UAAU,QAAf,SAAuB,6BAAKsB,EAAMD,GAAWE,UAC7C,qBAAKvB,UAAU,OAAf,SAAsB,6BAAKsB,EAAMD,GAAWgB,aAE9C,8BACE,+BACE,oBAAIlC,QAAS1D,KAAKiF,KAAlB,yBAGA,uCACQL,EAAY,KAEpB,oBAAIlB,QAAS1D,KAAKgF,KAAlB,qCAvEZ,GAAgC1E,aAkFhCqE,EAAWb,YAAcjE,ECpFlB,IAAMgG,EAAb,kDACE,WAAYtG,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXmE,KAAM,SACNmC,IAAK,QACLjB,MAAO,EAAKtF,MAAMsF,MAClBkB,UAAW,GACXC,cAAe,EACfC,WAAW,EACXC,OAAQ,IAGV,EAAKC,aAAe,EAAKA,aAAaxE,KAAlB,gBACpB,EAAKyE,YAAc,EAAKA,YAAYzE,KAAjB,gBACnB,EAAK0E,aAAe,EAAKA,aAAa1E,KAAlB,gBACpB,EAAKuE,OAAS,EAAKA,OAAOvE,KAAZ,gBAfG,EADrB,gEAmBuB,IAAD,OAClBM,MAAM,GAAD,OAAIjC,KAAKkC,QAAQ1C,MAAMI,OAAvB,eAA4C,CAC/CiD,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMjC,KAAKQ,UAAU,CAACuD,MAAO7E,KAAKR,MAAMqF,UACvC1C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAEJ,EAAKnC,SAAS,CAAC6F,UAAW1D,EAAK0D,UAAWE,WAAW,EAAOD,cAAe,EAAKK,aAAa,EAAGhE,EAAK0D,UAAUO,OAAOnB,eA7B9H,6BAiCSpD,GAAI,IAAD,SAOJ/B,KAAKR,MALPmE,EAFM,EAENA,KACAmC,EAHM,EAGNA,IACAE,EAJM,EAINA,cACAE,EALM,EAKNA,OACAH,EANM,EAMNA,UAIF,GADAhE,EAAEC,iBACW,WAAT2B,EAEEoC,EAAUO,OAAON,GAAeF,GAAKS,UAAYxE,EAAES,OAAOgE,WAC5DzE,EAAES,OAAOe,WAAa,WACtB8B,YAAW,WACTtD,EAAES,OAAOe,UAAY,SACrB,EAAKrD,SAAS,CACd8F,cAAe,EAAKK,aAAa,EAAGN,EAAUO,OAAOnB,QACrDe,OAAQ,OAEP,OAEHnE,EAAES,OAAOe,WAAa,aACtB8B,YAAW,WACTtD,EAAES,OAAOe,UAAY,SACrB,EAAKrD,SAAS,CACd8F,cAAe,EAAKK,aAAa,EAAGN,EAAUO,OAAOnB,QACrDe,OAAQ,OAEP,WAGL,GAAIH,EAAUO,OAAON,GAAeF,GAAKS,UAAYL,EAAQ,CAC3D,IAAI7C,EAAOtB,EAAES,OAAOiE,cAAcC,uBAAuBC,kBACzDtD,EAAKE,WAAa,WAClBF,EAAKmD,UAAY,YAAcnD,EAAKmD,UACpCnB,YAAW,WACThC,EAAKE,UAAY,OACjBF,EAAKmD,UAAYnD,EAAKmD,UAAUI,UAAU,GAC1C,EAAK1G,SAAS,CACd8F,cAAe,EAAKK,aAAa,EAAGN,EAAUO,OAAOnB,QACrDe,OAAQ,OAEP,SACE,CACL,IAAI7C,EAAOtB,EAAES,OAAOiE,cAAcC,uBAAuBC,kBACzDtD,EAAKE,WAAa,aAClBF,EAAKmD,UAAY,cAAgBnD,EAAKmD,UACtCnB,YAAW,WACThC,EAAKE,UAAY,OACjBF,EAAKmD,UAAYnD,EAAKmD,UAAUI,UAAU,IAC1C,EAAK1G,SAAS,CACd8F,cAAe,EAAKK,aAAa,EAAGN,EAAUO,OAAOnB,QACrDe,OAAQ,OAEP,QAxFX,mCA6FeW,EAAKC,GAGhB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,GAAOA,KAhGpD,kCAmGc9E,GACV/B,KAAKE,SAAL,eAAgB6B,EAAES,OAAOC,KAAOV,EAAES,OAAOzC,UApG7C,mCAuGegC,GACX/B,KAAKE,SAAL,eAAgB6B,EAAES,OAAOC,KAAOV,EAAES,OAAOzC,UAxG7C,+BA2GY,IAAD,OACP,GAAIC,KAAKR,MAAMyG,UACb,OAAQ,2CAFH,MAOHjG,KAAKR,MAAMuG,UAFbO,EALK,EAKLA,OACAa,EANK,EAMLA,MAGF,OACE,sBAAK1B,MAA2B,SAApBzF,KAAKT,MAAMmG,KAAkB,CAAEC,QAAS,SAAY,GAAIpC,UAAU,OAA9E,UACE,mCACE,6CACA,yBAAQxD,MAAOC,KAAKR,MAAMsG,IAAKpE,SAAU1B,KAAKoG,YAAa3D,KAAK,MAAM2E,GAAG,OAAzE,UACE,wBAAQrH,MAAM,QAAd,oBACA,wBAAQA,MAAM,QAAd,uBAEF,uBACA,mDACA,yBAAQA,MAAOC,KAAKR,MAAMmE,KAAMjC,SAAU1B,KAAKmG,aAAc1D,KAAK,OAAO2E,GAAG,OAA5E,UACE,wBAAQrH,MAAM,SAAd,6BACA,wBAAQA,MAAM,QAAd,yBAGiB,WAApBC,KAAKR,MAAMmE,KACX,sBAAKJ,UAAU,WAAW6D,GAAG,kBAA7B,UACC,oBAAIA,GAAG,iBAAP,SACsB,UAAnBpH,KAAKR,MAAMsG,IAEZQ,EAAOtG,KAAKR,MAAMwG,eAAelB,MAAMuC,SAEvCf,EAAOtG,KAAKR,MAAMwG,eAAeJ,MAAMyB,WAEzC,qBAAK9D,UAAU,UAAf,SACG+C,EAAOtG,KAAKR,MAAMwG,eAAehG,KAAKR,MAAMsG,KAAKwB,QAAQlE,KAAI,SAAC8C,EAAQ5C,GACrE,OAAO,qBAAaI,QAAS,EAAKwC,OAAQ3C,UAAU,SAA7C,SAAuD2C,GAA7C5C,WAItB,sBAAKC,UAAU,WAAW6D,GAAG,QAA7B,UACC,oBAAIA,GAAG,iBAAP,SACsB,UAAnBpH,KAAKR,MAAMsG,IAEZqB,EAAMnH,KAAKR,MAAMwG,eAAelB,MAAMuC,SAEtCF,EAAMnH,KAAKR,MAAMwG,eAAeJ,MAAMyB,WAExC,qBAAK9D,UAAU,SAAf,SACE,oBAAIA,UAAU,OAAO6D,GAAG,kBAE1B,uBAAM7D,UAAU,WAAhB,UACE,uBAAOxD,MAAOC,KAAKR,MAAM0G,OAAQxE,SAAU,SAACK,GAAD,OAAO,EAAK7B,SAAS,CAACgG,OAAQnE,EAAES,OAAOzC,SAAS4D,KAAK,OAAOyD,GAAG,SAAS3E,KAAK,WACxH,wBAAQiB,QAAS1D,KAAKkG,OAAtB,iCA/JZ,GAA0B5F,aAwK1BuF,EAAK/B,YAAcjE,ECnKZ,IAAM0H,EAAb,kDACE,WAAYhI,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXyG,WAAW,EACXP,KAAM,OACN8B,OAAQ,EAAKjI,MAAMkI,MAAMC,OAAON,GAChCpE,KAAM,EAAKzD,MAAMG,SACjB8B,KAAM,GACNC,KAAK,EACLkG,QAAS,GACTC,QAAS,GACT1D,UAAU,EACV2D,MAAM,GAER,EAAK/F,OAAS,EAAKA,OAAOH,KAAZ,gBACd,EAAKmG,WAAa,EAAKA,WAAWnG,KAAhB,gBAClB,EAAKoG,aAAe,EAAKA,aAAapG,KAAlB,gBACpB,EAAKqG,OAAS,EAAKA,OAAOrG,KAAZ,gBACd,EAAKsG,aAAe,EAAKA,aAAatG,KAAlB,gBACpB,EAAKuG,SAAW,EAAKA,SAASvG,KAAd,gBAChB,EAAKwG,eAAiB,EAAKA,eAAexG,KAApB,gBACtB,EAAKyG,SAAW,EAAKA,SAASzG,KAAd,gBAChB,EAAK0G,WAAa,EAAKA,WAAW1G,KAAhB,gBAtBD,EADrB,uDA0BaI,GAAI,IAAD,OACZA,EAAEC,iBACF,IAAIsG,EAAQ,CACV3F,OAAQ3C,KAAKR,MAAMwD,KAAKJ,IACxB4E,OAAQxH,KAAKR,MAAMgI,QAErBzF,EAAES,OAAOgE,UAAY,cACrBvE,MAAM,GAAD,OAAIjC,KAAKkC,QAAQ1C,MAAMG,MAAvB,gBAA4C,CAC/CkD,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,KAEjCC,KAAMjC,KAAKQ,UAAUgH,KACpBnG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACAA,EAAKC,SAGP,EAAKJ,QAAQ/B,YAAYkC,EAAKW,WA7CxC,+BAmDWjB,GAAI,IAAD,OACVA,EAAEC,iBACF,IAEIsG,EAAQ,CACVC,OAHSvI,KAAKR,MAAMgC,KAAKqD,MAAM2D,SAASzG,EAAES,OAAOC,OAGpCG,IACb4E,OAAQxH,KAAKR,MAAMgI,QAErBzF,EAAES,OAAOgE,UAAY,cACrBvE,MAAM,GAAD,OAAIjC,KAAKkC,QAAQ1C,MAAMG,MAAvB,qBAAiD,CACpDkD,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,KAEjCC,KAAMjC,KAAKQ,UAAUgH,KACpBnG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJ,GAAIA,EAAKC,QAAS,CAChB,IAAImG,EAAe,EAAKvG,QAAQ1C,MAAME,SACtC+I,EAAavF,MAAQb,EAAKa,MAC1B,EAAKhB,QAAQ/B,YAAYsI,SAxEnC,qCA8EiB1G,GACbA,EAAEC,iBACFhC,KAAKE,SAAL,eAAgB6B,EAAES,OAAOC,KAAOV,EAAES,OAAOzC,UAhF7C,+BAmFWgC,GAAI,IAAD,OACVA,EAAEC,iBACF,IAAIsG,EAAQ,CACVxD,MAAO9E,KAAKR,MAAMmI,QAClB/B,MAAO5F,KAAKR,MAAMoI,QAClBjF,OAAQ3C,KAAKR,MAAMwD,KAAKJ,IACxB4E,OAAQxH,KAAKR,MAAMgI,QAErBzF,EAAES,OAAOgE,UAAY,cACrBvE,MAAM,GAAD,OAAIjC,KAAKkC,QAAQ1C,MAAMG,MAAvB,qBAAiD,CACpDkD,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,KAEjCC,KAAMjC,KAAKQ,UAAUgH,KACpBnG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJ,GAAIA,EAAKC,QAAS,CAChB,IAAImG,EAAe,EAAKvG,QAAQ1C,MAAME,SACtC+I,EAAavF,MAAQb,EAAKa,MAE1B,EAAKhB,QAAQ/B,YAAYsI,SAzGnC,mCA+Ge1G,GACXA,EAAEC,iBACFhC,KAAKE,SAAS,CAAEuB,KAAK,MAjHzB,iCAoHaM,GAET/B,KAAKE,SAAS,CACZwF,KAAM3D,EAAES,OAAOgE,UAAUkC,kBAvH/B,mCA2He3G,GACX,IAAI4G,EAAO3I,KAAKR,MAAMgC,KACtBmH,EAAK9D,MAAM2D,SAASzG,EAAES,OAAOC,KAAKmG,MAAM,KAAK,KAAK7G,EAAES,OAAOC,KAAKmG,MAAM,KAAK,IAAM7G,EAAES,OAAOzC,MAC1FC,KAAKE,SAAS,CACZsB,KAAMmH,EACNd,MAAM,MAhIZ,6BAoIS9F,GAAI,IAAD,OACRA,EAAEC,iBAEF,IAAIsG,EAAQ,CACVnF,SAAUnD,KAAKR,MAAMgC,KACrBgG,OAAQxH,KAAKR,MAAMgI,QAErBzF,EAAES,OAAOgE,UAAY,YACrBvE,MAAM,GAAD,OAAIjC,KAAKkC,QAAQ1C,MAAMG,MAAvB,cAA0C,CAC7CkD,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,KAEjCC,KAAMjC,KAAKQ,UAAUgH,KACpBnG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACJ,GAAIA,EAAKC,QAAS,CAChB,IAAImG,EAAe,EAAKvG,QAAQ1C,MAAME,SACtC+I,EAAavF,MAAQb,EAAKa,MAC1B,EAAKhB,QAAQ/B,YAAYsI,SAxJnC,6BA8JS1G,GAAI,IAAD,OACRA,EAAEC,iBACF,IAAMd,EAAMT,EAAe,mBAEvBS,GAAOA,EAAIzB,OACbwC,MAAMjC,KAAKkC,QAAQ1C,MAAMG,MAAQ,gBAC9BwC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACAA,EAAKC,UACP,EAAK/C,MAAMgD,eAAe,IAC1B,EAAKL,QAAQjC,YAAY,IACzB,EAAKiC,QAAQ/B,YAAY,UAzKrC,0CA8LuB,IACf0I,EADc,OAElBA,EAAO7I,KAAKR,MAAMwD,KAAKE,MACnBlD,KAAKR,MAAMwD,KAAKE,MAAME,KAAI,SAAArB,GAAC,OAAIA,EAAEa,OAAKkG,SAAS9I,KAAKR,MAAMgI,QAC5DqB,EAAKE,SAAQ,SAAC1F,GACRA,EAAKT,MAAQ,EAAKpD,MAAMgI,QAC1B,EAAKtH,SAAS,CACZsB,KAAM6B,EACN4C,WAAW,OAKjBjG,KAAKE,SAAS,CACZgE,UAAU,EACV+B,WAAW,MA7MnB,+BAiNY,IAAD,OAEP,GAAIjG,KAAKR,MAAMyG,UAEb,OAAQ,2CAGV,IAA4B,IAAxBjG,KAAKR,MAAM0E,SACb,OAAQ,cAAC,IAAD,CAAUV,GAAG,MAGvB,IAAIwF,EACF,sBAAKvD,MAAO,CAAEwD,OAAQ,kCAAoC1F,UAAU,WAApE,UACE,oCACA,uBACA,uBAAO2F,QAAQ,QAAf,sBACA,uBAAOvF,KAAK,OAAOjC,SAAU1B,KAAKmI,eAAgBpI,MAAOC,KAAKR,MAAMmI,QAASpE,UAAU,YAAYd,KAAK,YACxG,uBAAOyG,QAAQ,QAAf,sBACA,uBAAOvF,KAAK,OAAOjC,SAAU1B,KAAKmI,eAAgBpI,MAAOC,KAAKR,MAAMoI,QAASrE,UAAU,YAAYd,KAAK,YACxG,wBAAQiB,QAAS1D,KAAKkI,SAAtB,uBAIAiB,EAAQnJ,KAAKR,MAAMgC,KAAKqD,MAAMzB,KAAI,SAACC,EAAMC,GAC3C,OACE,sBAAKC,UAAU,WAAf,UAEE,uBAAO2F,QAAQ,QAAf,sBACA,uBAAOvF,KAAK,OAAOjC,SAAU,EAAKqG,aAAchI,MAAO,EAAKP,MAAMgC,KAAKqD,MAAMvB,GAAGwB,MAAOvB,UAAU,YAAYd,KAAM,CAAC,QAASa,KAC7H,uBAAO4F,QAAQ,QAAf,sBACA,uBAAOvF,KAAK,OAAOjC,SAAU,EAAKqG,aAAchI,MAAO,EAAKP,MAAMgC,KAAKqD,MAAMvB,GAAGsC,MAAOrC,UAAU,YAAYd,KAAM,CAAC,QAASa,KAC7H,wBAAQmC,MAAO,CAAC2D,gBAAiB,oBAAqB1F,QAAS,EAAK0E,SAAU3F,KAAMa,EAApF,2BAN6BA,MAWnC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,OAAd,8BACA,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMA,UAAU,OAAOC,GAAG,IAA1B,oBAEF,6BACE,mBAAGC,KAAK,GAAGF,UAAU,OAAOG,QAAS1D,KAAK8B,OAA1C,gCAOV,qBAAKyB,UAAU,OAAf,SACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,UAAf,UACE,+CACA,8BACE,6BACE,mBAAGA,UAAU,OAAb,SACE,oBAAI6D,GAAG,eAAP,SAAuBpH,KAAKR,MAAMgC,KAAKiB,MAAQ,wBAMvD,sBAAKgD,MAA2B,SAApBzF,KAAKR,MAAMkG,KAAkB,CAAE2D,UAAW,UAAa,CAACA,UAAW,UAAW9F,UAAU,WAApG,UACE,sBAAKkC,MAA2B,SAApBzF,KAAKR,MAAMkG,KAAkB,CAAEC,QAAS,QAAW,GAAIpC,UAAU,OAA7E,UACGvD,KAAKR,MAAMqI,KAAO,wBAAQnE,QAAS1D,KAAKgI,OAAQzE,UAAU,MAAxC,0BAAqE,KAGtF4F,EAGAnJ,KAAKR,MAAMiC,IAAMuH,EAAU,wBAAQtF,QAAS1D,KAAKiI,aAAc1E,UAAU,MAA9C,sBAE7B,wBAAQG,QAAS1D,KAAKqI,WAAY5C,MAAO,CAAE2D,gBAAiB,oBAAsB7F,UAAU,MAA5F,4BAG+B,IAAjCvD,KAAKR,MAAMgC,KAAKqD,MAAMM,OACrB,eAAC,IAAMmE,SAAP,WAAqC,eAApBtJ,KAAKR,MAAMkG,KAAwB,cAAC,EAAD,CAAYA,KAAM1F,KAAKR,MAAMkG,KAAMb,MAAO7E,KAAKR,MAAMgC,KAAKqD,QAAU,KACpG,SAApB7E,KAAKR,MAAMkG,KAAkB,cAAC,EAAD,CAAMA,KAAM1F,KAAKR,MAAMkG,KAAMb,MAAO7E,KAAKR,MAAMgC,KAAKqD,QAAU,QAA0B,QAGxH,sBAAKtB,UAAU,YAAf,UACE,sCACA,8BACE,+BACE,oBAAIG,QAAS1D,KAAK8H,WAAYvE,UAA+B,eAApBvD,KAAKR,MAAMkG,KAAwB,SAAW,GAAvF,wBACA,oBAAIhC,QAAS1D,KAAK8H,WAAYvE,UAA+B,SAApBvD,KAAKR,MAAMkG,KAAkB,SAAW,GAAjF,kBACA,oBAAIhC,QAAS1D,KAAK8H,WAAYvE,UAA+B,SAApBvD,KAAKR,MAAMkG,KAAkB,SAAW,GAAjF,qCA5SlB,gDAmLkC6D,EAAWnE,GAEzC,OAAImE,EAAU9B,MAAMC,OAAON,KAAOhC,EAAUoC,OAElC,CAAEA,OAAQ+B,EAAU9B,MAAMC,OAAON,IAElC,SAzLb,GAA0B9G,aAuTXiH,IACfA,EAAKzD,YAAcjE,EClTZ,IAAM2J,EAAb,kDACE,WAAYjK,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXyG,WAAW,EACXwD,MAAO,GACPhK,MAAO,EAAKF,MAAME,OAGpB,EAAK8C,eAAiB,EAAKA,eAAeZ,KAApB,gBARL,EADrB,2DAYiB+H,GACb1J,KAAKE,SAAS,CAAET,MAAOiK,MAb3B,0CAgBuB,IAAD,OACZxI,EAAMT,EAAe,mBACvBS,GAAOA,EAAIzB,MACbwC,MAAM,GAAD,OAAIjC,KAAKkC,QAAQ1C,MAAMG,MAAvB,8BAAkDuB,EAAIzB,QACxD0C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACAA,EAAKC,SACP,EAAKJ,QAAQjC,YAAYiB,EAAIzB,OAC7B,EAAKyC,QAAQ/B,YAAYkC,EAAKW,MAE9B,EAAK9C,SAAS,CACZT,MAAOyB,EAAIzB,MACXwG,WAAW,KAGb,EAAK/F,SAAS,CACZ+F,WAAW,OAKnBjG,KAAKE,SAAS,CACZ+F,WAAW,MAtCnB,+BA2CY,IAAD,OACP,OAAIjG,KAAKR,MAAMyG,UAEX,8BAAK,6CAIP,cAAC,IAAD,CAAQ0D,SAAUC,mBAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,QAAM,EAACC,OAC3B,kBACE,cAAC,IAAMV,SAAP,UAEyB,KAArB,EAAK9J,MAAMC,MAAgB,cAACI,EAAUoK,SAAX,UACxB,SAAC/H,GAAD,OACC,cAAC,EAAD,CAAMK,eAAgB,EAAKA,eAAgB9C,MAAOyC,EAAQ1C,MAAMC,WAE3C,cAAC,IAAD,CAAU+D,GAAG,eAM9C,cAAC,IAAD,CAAOqG,KAAK,QAAQC,OAAK,EAACC,QAAM,EAACC,OAC/B,kBAEE,cAAC,IAAMV,SAAP,UAEyB,KAArB,EAAK9J,MAAMC,MAAe,cAAC,EAAD,CAAMQ,YAAa,SAACR,GAAD,OAAW,EAAKS,SAAS,CAAET,MAAOA,KAAUuE,UAAU,IAC/F,cAAC,IAAD,CAAUR,GAAG,WAMzB,cAAC,IAAD,CAAOqG,KAAK,YAAYC,OAAK,EAACC,QAAM,EAACG,UACnC,SAAC3K,GAAD,MAEuB,KAArB,EAAKC,MAAMC,MAAe,cAAC,EAAD,aAAMC,SAAU,EAAKwC,QAAQ1C,MAAME,SAAU6C,eAAgB,EAAKA,gBAAoBhD,IAC5G,cAAC,IAAD,CAAUiE,GAAG,sBAlF/B,GAAyBlD,aA2FVkJ,IACfA,EAAI1F,YAAcjE,EC1GlB,IAYesK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlI,MAAK,YAAkD,IAA/CmI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCRO,EACJ,cAAC,EAAD,UACE,cAAC9K,EAAUoK,SAAX,UACG,SAAC/H,GAAD,OACC,cAAC,EAAD,CAAKzC,MAAOyC,EAAQ1C,MAAMC,aAKlCmL,IAASZ,OAAOW,EAAOE,SAASC,eAAe,SAK/CX,M","file":"static/js/main.212ec772.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class MyProvider extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: '',\r\n      userData: {},\r\n      proxy: 'https://language-learner-am.herokuapp.com/',\r\n      proxy2: 'https://language-learner-am.herokuapp.com/'\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MyContext.Provider value={{\r\n        state: this.state,\r\n        changeToken: (token) => this.setState({ token: token }),\r\n        setUserData: (data) => this.setState({ userData: data })\r\n      }}>\r\n        {this.props.children}\r\n      </MyContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyProvider;\r\nexport const MyContext = React.createContext();\r\n","export function getFromStorage(key) {\r\n  if (!key) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const valueStr = localStorage.getItem(key);\r\n    if (valueStr) {\r\n      return JSON.parse(valueStr);\r\n    }\r\n    return null;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function setInStorage(key, obj) {\r\n  if (!key) {\r\n    console.log('Error: Key is missing');\r\n  }\r\n\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(obj));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}","import React, { Component } from 'react'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport {MyContext} from '../storage'\r\nimport { getFromStorage } from '../utils/storage';\r\n\r\nexport class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: '',\r\n      new: false\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onNew = this.onNew.bind(this);\r\n    this.create = this.create.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  logout(e) {\r\n    e.preventDefault();\r\n    const obj = getFromStorage('LanguageLearner');\r\n\r\n    if (obj && obj.token) {\r\n      fetch(this.context.state.proxy + 'users/logout')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          if (json.success) {\r\n            this.props.setParentToken('');\r\n            this.context.changeToken('');\r\n            this.context.setUserData({});\r\n          } else {\r\n            //console.log(json.message);\r\n          }\r\n        })\r\n    } else {\r\n      //console.log('err');\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  onNew(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      new: true\r\n    });\r\n  }\r\n\r\n  create(e) {\r\n    e.preventDefault();\r\n    const stuff = {\r\n      name: this.state.list,\r\n      userid: this.context.state.userData._id\r\n    };\r\n    //console.log(stuff)\r\n    fetch(this.context.state.proxy+'lists/create', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': \"application/json\",\r\n        'Access-Control-Allow-Origin': '*'\r\n      },\r\n      body: JSON.stringify(stuff)\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        const {\r\n          email,\r\n          name,\r\n          lists,\r\n          _id\r\n        } = json.user\r\n        this.context.setUserData({\r\n          email,\r\n          name,\r\n          lists,\r\n          _id\r\n        });     \r\n        this.setState({\r\n          list: '',\r\n          new: false\r\n        });\r\n        \r\n      })\r\n  }\r\n\r\n  render() {\r\n    const the_list = this.context.state.userData.lists.map((elem, i) => {\r\n      return (\r\n      <Link key={i} className=\"link\" to={'/list/'+elem._id}>\r\n        <li>{elem.name}</li>\r\n      </Link>\r\n      )\r\n    });\r\n    \r\n\r\n    //console.log(the_list)\r\n\r\n    return (\r\n      <div className=\"body\">\r\n        <div className=\"navbar\">\r\n          <div className=\"container flex\">\r\n            <h1 className=\"logo\">Language Learner</h1>\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link className=\"link\" to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\" className=\"link\" onClick={this.logout}>Logout</a>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"main\">\r\n          <div className=\"flex stuff\">\r\n            <div className=\"listnav\">\r\n              <h2>My Lists</h2>\r\n              <nav>\r\n                <ul>\r\n                  {the_list}\r\n                  {this.state.new ?\r\n                    <li>\r\n                      <input type=\"text\" onChange={this.onChange} value={this.state.list} className=\"editinput\" name=\"list\" />\r\n                    </li> : null\r\n                  }\r\n                  {!this.state.new ?\r\n                    <li>\r\n                      <button onClick={this.onNew} className=\"new\">New +</button>\r\n                    </li> :\r\n                    <li>\r\n                      <button onClick={this.create} className=\"new\">Create</button>\r\n                    </li>\r\n                  }\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n            <div className=\"showcase\">\r\n              <div className=\"display\">\r\n                <p>Select the list that you would like to view.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"actionnav\">\r\n              <h2>View</h2>\r\n              <nav>\r\n                <ul>\r\n                  <li>Select a list<br />to select a view.</li>\r\n                  \r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\nHome.contextType = MyContext;\r\n","export function register(proxy, user, cb) {\r\n  fetch(`${proxy}users/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*'\r\n    },\r\n    body: JSON.stringify(user)\r\n  }).then(res => res.json())\r\n    .then(json => {\r\n      if (json.success) {\r\n        cb(json);\r\n      }\r\n    })\r\n}\r\n\r\nexport function login(proxy, user, cb) {\r\n  fetch(`${proxy}users/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': \"application/json\",\r\n      'Access-Control-Allow-Origin': '*'\r\n    },\r\n    body: JSON.stringify(user)\r\n  }).then(res => res.json())\r\n    .then(json => {\r\n      if (json.success) {\r\n        cb(json);\r\n      }\r\n    })\r\n}","import React, { Component } from 'react'\r\nimport { MyContext } from '../storage';\r\nimport {Link, Redirect} from 'react-router-dom'\r\n\r\nimport {register, login} from '../utils/authfuncs';\r\nimport { setInStorage } from '../utils/storage.js';\r\n\r\n\r\nexport class Auth extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      register: this.props.register,\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      redirect: false\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  onSubmit(e) {\r\n    const {\r\n      name,\r\n      email,\r\n      password\r\n    } = this.state;\r\n    e.preventDefault();\r\n    if (this.state.register) {\r\n      const newUser = {\r\n        name,\r\n        email,\r\n        password\r\n      };\r\n      //console.log(newUser)\r\n      register(this.context.state.proxy, newUser, (data) => {\r\n        //console.log(data);\r\n        login(this.context.state.proxy, newUser, (data2) => {\r\n          //console.log(data2);\r\n          const {\r\n            email,\r\n            name,\r\n            lists,\r\n            _id\r\n          } = data.user\r\n          this.context.setUserData({\r\n            email,\r\n            name,\r\n            lists,\r\n            _id\r\n          });\r\n\r\n          setInStorage('LanguageLearner', {token: data2.token});\r\n          this.setState({\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            redirect: true\r\n          });\r\n          this.context.changeToken(data2.token);\r\n          this.props.changeToken(data2.token);\r\n        })\r\n      })\r\n      \r\n    } else {\r\n      const info = {\r\n        email,\r\n        password\r\n      };\r\n      login(this.context.state.proxy, info, (data2) => {\r\n        //console.log(data2);\r\n        const {\r\n          email,\r\n          name,\r\n          lists,\r\n          _id\r\n        } = data2.user\r\n        this.context.setUserData({\r\n          email,\r\n          name,\r\n          lists,\r\n          _id\r\n        });\r\n\r\n        setInStorage('LanguageLearner', {token: data2.token});\r\n        this.setState({\r\n          name: '',\r\n          email: '',\r\n          password: '',\r\n          redirect: true\r\n        });\r\n        this.context.changeToken(data2.token);\r\n        this.props.changeToken(data2.token);\r\n      })\r\n\r\n      \r\n\r\n      //console.log(info);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let label_classes = {\r\n      label1: this.state.register ? 'label1' : 'label1 auth-selected',\r\n      label2: !this.state.register ? 'label2' : 'label2 auth-selected',\r\n      buttontxt: this.state.register ? 'Register' : 'Login'\r\n    };\r\n\r\n    if (this.state.redirect) {\r\n      return (<Redirect to=\"/\" />)\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"body\">\r\n        <div className=\"navbar\">\r\n          <div className=\"container flex\">\r\n            <h1 className=\"logo\">Language Learner</h1>\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link className=\"link\" to=\"/\">Home</Link>\r\n                </li>\r\n                \r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"main\">\r\n          <div className=\"auth-wrapper stuff\">\r\n            \r\n            <div className=\"auth\">\r\n              <div className={label_classes.label1} onClick={() => this.setState({register: false})}>Login</div>\r\n              <div className={label_classes.label2} onClick={() => this.setState({register: true})}>Register</div>\r\n              <div className=\"infoarea auth-selected\">\r\n                {\r\n                  this.state.register ? <div>\r\n                    <label>Name: </label><br />\r\n                    <input type=\"text\" onChange={this.onChange} value={this.state.name} className=\"editinput\" name=\"name\" />\r\n                  </div> : null\r\n                }\r\n                \r\n                <div>\r\n                  <label>Email: </label><br />\r\n                  <input type=\"email\" onChange={this.onChange} value={this.state.email} className=\"editinput\" name=\"email\" />\r\n                </div>\r\n                <div>\r\n                  <label>Password: </label><br />\r\n                  <input type=\"password\" onChange={this.onChange} value={this.state.password} className=\"editinput\" name=\"password\" />\r\n                </div>\r\n                <div>\r\n                  <button onClick={this.onSubmit}>{label_classes.buttontxt}</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Auth\r\nAuth.contextType = MyContext;","import React, { Component } from 'react'\r\nimport { MyContext } from '../storage';\r\n\r\nimport '../App.css'\r\n\r\nexport class Flashcards extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardindex: 0,\r\n      cards: this.props.cards,\r\n      side1: true,\r\n      change: false\r\n    };\r\n\r\n    this.next = this.next.bind(this);\r\n    this.back = this.back.bind(this);\r\n    this.flip = this.flip.bind(this);\r\n  }\r\n\r\n  next() {\r\n    if (this.state.cards.length - 1 !== this.state.cardindex) {\r\n      this.setState(prevState => {\r\n        return {cardindex: prevState.cardindex + 1, side1: true, change: true}\r\n      });\r\n    }\r\n  }\r\n\r\n  back() {\r\n    if (0 !== this.state.cardindex) {\r\n      this.setState(prevState => {\r\n        return {cardindex: prevState.cardindex - 1, side1: true, change: true}\r\n      });\r\n    }\r\n  }\r\n\r\n  flip() {\r\n    this.setState({\r\n      side1: !this.state.side1\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.change === true) {\r\n      setTimeout(() => {        \r\n        this.setState({\r\n          change: false\r\n        });\r\n      }, 250)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      cardindex,\r\n      cards\r\n    } = this.state;\r\n\r\n    let divclass = this.state.side1 ? '' : ' is-flipped';\r\n\r\n    let cardtransition = this.state.change ? {animation: 'myanimation 0.25s linear'} : {}\r\n\r\n    return (\r\n      <div style={this.props.view === 'flashcards' ? { display: 'flex' } : {}} className=\"flashcards\">\r\n        <div style={cardtransition} onClick={this.flip} className={\"card\" + divclass}>\r\n          <div className=\"front\"><h1>{cards[cardindex].side1}</h1></div>\r\n          <div className=\"back\"><h1>{cards[cardindex].side2}</h1></div>\r\n        </div>\r\n        <nav>\r\n          <ul>\r\n            <li onClick={this.back}>\r\n              &#8592; Back\r\n            </li>\r\n            <li>\r\n              Card {cardindex + 1}\r\n            </li>\r\n            <li onClick={this.next}>\r\n              Next &#8594;\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Flashcards\r\nFlashcards.contextType = MyContext;\r\n","import React, { Component } from 'react'\r\nimport { MyContext } from '../storage';\r\n\r\nexport class Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      type: 'choice',\r\n      ask: 'side2',\r\n      cards: this.props.cards,\r\n      questions: [],\r\n      questionIndex: 0,\r\n      isLoading: true,\r\n      answer: ''\r\n    };\r\n\r\n    this.onTypeChange = this.onTypeChange.bind(this);\r\n    this.onAskChange = this.onAskChange.bind(this);\r\n    this.getRandomInt = this.getRandomInt.bind(this);\r\n    this.answer = this.answer.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${this.context.state.proxy2}users/test/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({cards: this.state.cards})\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        //console.log(json.questions)\r\n        this.setState({questions: json.questions, isLoading: false, questionIndex: this.getRandomInt(0, json.questions.choice.length)});\r\n      })\r\n  }\r\n\r\n  answer(e) {\r\n    const {\r\n      type,\r\n      ask,\r\n      questionIndex,\r\n      answer,\r\n      questions\r\n    } = this.state\r\n    //console.log(e);\r\n    e.preventDefault();\r\n    if (type === 'choice') {\r\n        //console.log(questions.choice[questionIndex].side1.answer)\r\n      if (questions.choice[questionIndex][ask].correct === e.target.innerHTML) {\r\n        e.target.className += \" correct\"\r\n        setTimeout(() => {\r\n          e.target.className = \"choice\"\r\n          this.setState({\r\n          questionIndex: this.getRandomInt(0, questions.choice.length),\r\n          answer: ''\r\n          })\r\n        }, 1000)\r\n      } else {\r\n        e.target.className += \" incorrect\"\r\n        setTimeout(() => {\r\n          e.target.className = \"choice\"\r\n          this.setState({\r\n          questionIndex: this.getRandomInt(0, questions.choice.length),\r\n          answer: ''\r\n          })\r\n        }, 1000)\r\n      }\r\n    } else {\r\n      if (questions.choice[questionIndex][ask].correct === answer) {\r\n        let elem = e.target.parentElement.previousElementSibling.firstElementChild;\r\n        elem.className += \" correct\"\r\n        elem.innerHTML = \"Correct! \" + elem.innerHTML\r\n        setTimeout(() => {\r\n          elem.className = \"quiz\"\r\n          elem.innerHTML = elem.innerHTML.substring(9)\r\n          this.setState({\r\n          questionIndex: this.getRandomInt(0, questions.choice.length),\r\n          answer: ''\r\n          })\r\n        }, 2000)\r\n      } else {\r\n        let elem = e.target.parentElement.previousElementSibling.firstElementChild;\r\n        elem.className += \" incorrect\"\r\n        elem.innerHTML = \"Incorrect! \" + elem.innerHTML\r\n        setTimeout(() => {\r\n          elem.className = \"quiz\"\r\n          elem.innerHTML = elem.innerHTML.substring(11)\r\n          this.setState({\r\n          questionIndex: this.getRandomInt(0, questions.choice.length),\r\n          answer: ''\r\n          })\r\n        }, 2000)\r\n      }\r\n    }\r\n  }\r\n\r\n  getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n  }\r\n\r\n  onAskChange(e) {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  onTypeChange(e) {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (<p>Loading...</p>)\r\n    }\r\n    const {\r\n      choice,\r\n      typed\r\n    } = this.state.questions;\r\n    //console.log(choice);\r\n    return (\r\n      <div style={this.props.view === 'quiz' ? { display: 'block' } : {}} className=\"quiz\">\r\n        <center>\r\n          <label>Ask for:</label>\r\n          <select value={this.state.ask} onChange={this.onAskChange} name=\"ask\" id=\"type\">\r\n            <option value=\"side1\">Side 1</option>\r\n            <option value=\"side2\">Side 2</option>\r\n          </select>\r\n          <br />\r\n          <label>Response Type:</label>\r\n          <select value={this.state.type} onChange={this.onTypeChange} name=\"type\" id=\"type\">           \r\n            <option value=\"choice\">Multiple Choice</option>\r\n            <option value=\"typed\">Typed</option>\r\n          </select>\r\n        </center>\r\n        {this.state.type === 'choice' ?\r\n        (<div className=\"question\" id=\"multiple-choice\">\r\n          <h2 id=\"question-title\">\r\n            {this.state.ask === 'side1' \r\n            ? \r\n            choice[this.state.questionIndex].side1.question \r\n            : \r\n            choice[this.state.questionIndex].side2.question}\r\n          </h2>\r\n          <div className=\"choices\">\r\n            {choice[this.state.questionIndex][this.state.ask].answers.map((answer, i) => {\r\n              return <div key={i} onClick={this.answer} className=\"choice\">{answer}</div>\r\n            })}\r\n          </div>\r\n        </div>) :\r\n        (<div className=\"question\" id=\"typed\">\r\n          <h2 id=\"question-title\">\r\n            {this.state.ask === 'side1' \r\n            ? \r\n            typed[this.state.questionIndex].side1.question \r\n            : \r\n            typed[this.state.questionIndex].side2.question}\r\n          </h2>\r\n          <div className=\"reveal\"> \r\n            <h2 className=\"quiz\" id=\"reveal-text\"></h2>             \r\n          </div>\r\n          <form className=\"response\">\r\n            <input value={this.state.answer} onChange={(e) => this.setState({answer: e.target.value})} type=\"text\" id=\"answer\" name=\"answer\" />\r\n            <button onClick={this.answer}>Submit</button>\r\n          </form>\r\n        </div>)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Quiz\r\nQuiz.contextType = MyContext;\r\n","import React, { Component } from 'react'\r\n\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { MyContext } from '../storage'\r\nimport { getFromStorage } from '../utils/storage'\r\nimport { Flashcards } from './Flashcards';\r\nimport { Quiz } from './Quiz';\r\n\r\nexport class List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: true,\r\n      view: 'edit',\r\n      listid: this.props.match.params.id,\r\n      user: this.props.userData,\r\n      list: {},\r\n      new: false,\r\n      create1: '',\r\n      create2: '',\r\n      redirect: false,\r\n      save: false\r\n    };\r\n    this.logout = this.logout.bind(this);\r\n    this.changeView = this.changeView.bind(this);\r\n    this.editOnChange = this.editOnChange.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.toggleCreate = this.toggleCreate.bind(this);\r\n    this.onCreate = this.onCreate.bind(this);\r\n    this.createOnChange = this.createOnChange.bind(this);\r\n    this.onDelete = this.onDelete.bind(this);\r\n    this.deleteList = this.deleteList.bind(this);\r\n  }\r\n\r\n  deleteList(e) {\r\n    e.preventDefault();\r\n    let final = {\r\n      userid: this.state.user._id,\r\n      listid: this.state.listid\r\n    }\r\n    e.target.innerHTML = 'Deleting...'\r\n    fetch(`${this.context.state.proxy}lists/delete`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      },\r\n      body: JSON.stringify(final)\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        if (json.success) {\r\n          //console.log(json.user);\r\n          \r\n          this.context.setUserData(json.user);\r\n\r\n        }\r\n      })\r\n  }\r\n\r\n  onDelete(e) {\r\n    e.preventDefault();\r\n    let data = this.state.list.cards[parseInt(e.target.name)];\r\n    //console.log(data)\r\n    let final = {\r\n      cardid: data._id,\r\n      listid: this.state.listid\r\n    }\r\n    e.target.innerHTML = 'Deleting...'\r\n    fetch(`${this.context.state.proxy}lists/delete-card`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      },\r\n      body: JSON.stringify(final)\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        if (json.success) {\r\n          let contextstuff = this.context.state.userData;\r\n          contextstuff.lists = json.lists;\r\n          this.context.setUserData(contextstuff);\r\n\r\n        }\r\n      })\r\n  }\r\n\r\n  createOnChange(e) {\r\n    e.preventDefault();\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  onCreate(e) {\r\n    e.preventDefault();\r\n    let final = {\r\n      side1: this.state.create1,\r\n      side2: this.state.create2,\r\n      userid: this.state.user._id,\r\n      listid: this.state.listid\r\n    }\r\n    e.target.innerHTML = 'Creating...'\r\n    fetch(`${this.context.state.proxy}lists/create-card`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      },\r\n      body: JSON.stringify(final)\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        if (json.success) {\r\n          let contextstuff = this.context.state.userData;\r\n          contextstuff.lists = json.lists;\r\n          \r\n          this.context.setUserData(contextstuff);\r\n\r\n        }\r\n      })\r\n  }\r\n\r\n  toggleCreate(e) {\r\n    e.preventDefault();\r\n    this.setState({ new: true });\r\n  }\r\n\r\n  changeView(e) {\r\n    //console.log(e.target.innerHTML.toLowerCase());\r\n    this.setState({\r\n      view: e.target.innerHTML.toLowerCase()\r\n    });\r\n  }\r\n\r\n  editOnChange(e) {\r\n    let prev = this.state.list\r\n    prev.cards[parseInt(e.target.name.split(\",\")[1])][e.target.name.split(\",\")[0]] = e.target.value;\r\n    this.setState({\r\n      list: prev,\r\n      save: true\r\n    });\r\n  }\r\n\r\n  onSave(e) {\r\n    e.preventDefault();\r\n    //console.log(e)\r\n    let final = {\r\n      the_list: this.state.list,\r\n      listid: this.state.listid\r\n    }\r\n    e.target.innerHTML = 'Saving...'\r\n    fetch(`${this.context.state.proxy}lists/edit`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n      },\r\n      body: JSON.stringify(final)\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        if (json.success) {\r\n          let contextstuff = this.context.state.userData;\r\n          contextstuff.lists = json.lists;\r\n          this.context.setUserData(contextstuff);\r\n\r\n        }\r\n      })\r\n  }\r\n\r\n  logout(e) {\r\n    e.preventDefault();\r\n    const obj = getFromStorage('LanguageLearner');\r\n\r\n    if (obj && obj.token) {\r\n      fetch(this.context.state.proxy + 'users/logout')\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          if (json.success) {\r\n            this.props.setParentToken('');\r\n            this.context.changeToken('');\r\n            this.context.setUserData({});\r\n          } else {\r\n            //console.log(json.message);\r\n          }\r\n        })\r\n    } else {\r\n      //console.log('err');\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n\r\n    if (nextProps.match.params.id !== prevState.listid) {\r\n\r\n      return ({ listid: nextProps.match.params.id })\r\n    } else {\r\n      return null\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    let main;\r\n    main = this.state.user.lists;\r\n    if (this.state.user.lists.map(e => e._id).includes(this.state.listid)) {\r\n      main.forEach((elem) => {\r\n        if (elem._id === this.state.listid) {\r\n          this.setState({\r\n            list: elem,\r\n            isLoading: false\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        redirect: true,\r\n        isLoading: false\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    \r\n    if (this.state.isLoading) {\r\n      \r\n      return (<p>Loading...</p>)\r\n    }\r\n\r\n    if (this.state.redirect === true) {\r\n      return (<Redirect to=\"/\" />)\r\n    }\r\n    //console.log(this.state.list.cards);\r\n    let newmenu = (\r\n      <div style={{ border: '1px solid var(--primary-color)' }} className=\"cardedit\">\r\n        <p>New</p>\r\n        <hr />\r\n        <label htmlFor=\"side1\">Side 1: </label>\r\n        <input type=\"text\" onChange={this.createOnChange} value={this.state.create1} className=\"editinput\" name='create1' />\r\n        <label htmlFor=\"side2\">Side 2: </label>\r\n        <input type=\"text\" onChange={this.createOnChange} value={this.state.create2} className=\"editinput\" name='create2' />\r\n        <button onClick={this.onCreate}>Create</button>\r\n      </div>\r\n    )\r\n\r\n    let edits = this.state.list.cards.map((elem, i) => {\r\n      return (\r\n        <div className=\"cardedit\" key={i}>\r\n          \r\n          <label htmlFor=\"side1\">Side 1: </label>\r\n          <input type=\"text\" onChange={this.editOnChange} value={this.state.list.cards[i].side1} className=\"editinput\" name={['side1', i]} />\r\n          <label htmlFor=\"side2\">Side 2: </label>\r\n          <input type=\"text\" onChange={this.editOnChange} value={this.state.list.cards[i].side2} className=\"editinput\" name={['side2', i]} />       \r\n          <button style={{backgroundColor: 'rgb(199, 58, 58)'}} onClick={this.onDelete} name={i}>Delete Card</button>        \r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"body\">\r\n        <div className=\"navbar\">\r\n          <div className=\"container flex\">\r\n            <h1 className=\"logo\">Language Learner</h1>\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link className=\"link\" to=\"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                  <a href=\"\" className=\"link\" onClick={this.logout}>Logout</a>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"main\">\r\n          <div className=\"flex stuff\">\r\n            <div className=\"listnav\">\r\n              <h2>Selected List</h2>\r\n              <nav>\r\n                <ul>\r\n                  <a className=\"link\">\r\n                    <li id=\"selectedlist\">{this.state.list.name || 'Loading...'}</li>\r\n                  </a>\r\n\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n            <div style={this.state.view === 'edit' ? { overflowY: 'scroll' } : {overflowY: 'hidden'}} className=\"showcase\">\r\n              <div style={this.state.view === 'edit' ? { display: 'flex' } : {}} className=\"edit\">\r\n                {this.state.save ? <button onClick={this.onSave} className=\"new\">Save Changes</button>: null }\r\n                {\r\n                  \r\n                  edits\r\n                }\r\n                {\r\n                  this.state.new ? newmenu : <button onClick={this.toggleCreate} className=\"new\">New Card</button>\r\n                }\r\n                <button onClick={this.deleteList} style={{ backgroundColor: 'rgb(199, 58, 58)' }} className=\"new\">Delete List</button>\r\n              </div>\r\n              {\r\n              this.state.list.cards.length !== 0 ?\r\n              (<React.Fragment>{this.state.view === 'flashcards' ? <Flashcards view={this.state.view} cards={this.state.list.cards}/>: null}\r\n              {this.state.view === 'quiz' ? <Quiz view={this.state.view} cards={this.state.list.cards}/>: null}</React.Fragment>) : null\r\n              }\r\n            </div>\r\n            <div className=\"actionnav\">\r\n              <h2>View</h2>\r\n              <nav>\r\n                <ul>\r\n                  <li onClick={this.changeView} className={this.state.view === 'flashcards' ? 'active' : ''}>Flashcards</li>\r\n                  <li onClick={this.changeView} className={this.state.view === 'quiz' ? 'active' : ''}>Quiz</li>\r\n                  <li onClick={this.changeView} className={this.state.view === 'edit' ? 'active' : ''}>Edit</li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default List\r\nList.contextType = MyContext;","import React, { Component } from 'react';\nimport { Redirect, Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Auth from './components/Auth';\nimport List from './components/List';\n\nimport { MyContext } from './storage'\nimport {\n  getFromStorage\n} from './utils/storage';\n\nimport './App.css';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      error: '',\n      token: this.props.token\n    };\n\n    this.setParentToken = this.setParentToken.bind(this);\n  }\n\n  setParentToken(t) {\n    this.setState({ token: t });\n  }\n\n  componentDidMount() {\n    const obj = getFromStorage('LanguageLearner');\n    if (obj && obj.token) {\n      fetch(`${this.context.state.proxy}users/verify?token=${obj.token}`)\n        .then(res => res.json())\n        .then(json => {\n          if (json.success) {\n            this.context.changeToken(obj.token);\n            this.context.setUserData(json.user);\n            //console.log(this.context.state.userData);\n            this.setState({\n              token: obj.token,\n              isLoading: false\n            })\n          } else {\n            this.setState({\n              isLoading: false\n            });\n          }\n        })\n    } else {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div><p>Loading...</p></div>\n      )\n    }\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact strict render={\n            () => (\n              <React.Fragment>\n                {\n                  this.state.token !== '' ? (<MyContext.Consumer>\n                    {(context) => (\n                      <Home setParentToken={this.setParentToken} token={context.state.token} />\n                    )}\n                  </MyContext.Consumer>) : <Redirect to=\"/auth\" />\n                }\n              </React.Fragment>\n            )\n          } />\n\n          <Route path=\"/auth\" exact strict render={\n            () => (\n\n              <React.Fragment>\n                {\n                  this.state.token === '' ? <Auth changeToken={(token) => this.setState({ token: token })} register={false} />\n                    : <Redirect to=\"/\" />\n                }\n              </React.Fragment>\n            )\n          } />\n\n          <Route path=\"/list/:id\" exact strict component={\n            (props) => (\n\n              this.state.token !== '' ? <List userData={this.context.state.userData} setParentToken={this.setParentToken} {...props} />\n                : <Redirect to=\"/auth\" />\n            )\n          } />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\nApp.contextType = MyContext","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport MyProvider from './storage';\nimport { MyContext } from './storage';\nimport reportWebVitals from './reportWebVitals';\n\nconst thing = (\n  <MyProvider>\n    <MyContext.Consumer>\n      {(context) =>\n        <App token={context.state.token} />}\n    </MyContext.Consumer>\n  </MyProvider>\n);\n\nReactDOM.render(thing, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}